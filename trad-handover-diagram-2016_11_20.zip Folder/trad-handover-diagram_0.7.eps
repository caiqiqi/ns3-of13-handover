%!PS-Adobe-2.0 EPSF-2.0
%%Title: trad-handover-diagram.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sat Nov 19 22:34:36 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (trad-handover-diagram.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (cqq)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Nov 19 22:34:36 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-BoldItalic) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 448 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 448 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 448 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 1001 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 1001 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 1001 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 1554 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 1554 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 1554 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 2107 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 2107 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 2107 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 2660 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 2660 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 2660 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 3212 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 3212 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 3212 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 3765 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 3765 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 3765 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 120)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 4318 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 4318 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 4318 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 140)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 4871 M
4490 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 4871 M
63 0 V
4427 0 R
-63 0 V
stroke
2373 4871 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 160)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2457 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2457 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2457 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2956 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2956 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2956 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3455 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3455 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3455 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3954 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3954 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3954 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4453 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4453 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4453 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4951 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4951 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4951 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 25)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5450 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5450 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5450 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5949 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5949 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5949 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 35)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6448 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6448 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6448 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6947 448 M
0 4423 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 45)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
2457 4871 N
0 -4423 V
4490 0 V
0 4423 V
-4490 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
4702 98 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Time\(seconds\))]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
1995 4801 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Throughput\(Kbps\))]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 168 4801 M
399 0 V
2597 1577 M
70 49 V
69 770 V
70 357 V
70 320 V
70 -449 V
70 -136 V
70 -108 V
3155 448 L
70 1668 V
70 -234 V
70 341 V
70 271 V
70 278 V
70 137 V
69 -22 V
70 -23 V
3784 448 L
70 2210 V
70 -48 V
70 118 V
69 -30 V
70 97 V
70 64 V
70 145 V
70 93 V
70 15 V
69 20 V
4552 448 L
70 0 V
70 2386 V
70 -41 V
70 -64 V
70 -34 V
69 -25 V
70 -38 V
70 -16 V
70 -24 V
70 -29 V
70 -14 V
69 -4 V
70 -18 V
70 -24 V
70 14 V
70 -4 V
70 6 V
70 -60 V
69 -23 V
70 -57 V
70 -21 V
70 -56 V
70 -20 V
70 -21 V
69 -28 V
70 -23 V
70 -14 V
70 -21 V
2597 1577 Pls
2667 1626 Pls
2736 2396 Pls
2806 2753 Pls
2876 3073 Pls
2946 2624 Pls
3016 2488 Pls
3086 2380 Pls
3155 448 Pls
3225 2116 Pls
3295 1882 Pls
3365 2223 Pls
3435 2494 Pls
3505 2772 Pls
3575 2909 Pls
3644 2887 Pls
3714 2864 Pls
3784 448 Pls
3854 2658 Pls
3924 2610 Pls
3994 2728 Pls
4063 2698 Pls
4133 2795 Pls
4203 2859 Pls
4273 3004 Pls
4343 3097 Pls
4413 3112 Pls
4482 3132 Pls
4552 448 Pls
4622 448 Pls
4692 2834 Pls
4762 2793 Pls
4832 2729 Pls
4902 2695 Pls
4971 2670 Pls
5041 2632 Pls
5111 2616 Pls
5181 2592 Pls
5251 2563 Pls
5321 2549 Pls
5390 2545 Pls
5460 2527 Pls
5530 2503 Pls
5600 2517 Pls
5670 2513 Pls
5740 2519 Pls
5810 2459 Pls
5879 2436 Pls
5949 2379 Pls
6019 2358 Pls
6089 2302 Pls
6159 2282 Pls
6229 2261 Pls
6298 2233 Pls
6368 2210 Pls
6438 2196 Pls
6508 2175 Pls
368 4801 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
1995 4661 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Delay\(ms\))]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 168 4661 M
399 0 V
2597 2236 M
70 1595 V
69 -201 V
70 235 V
70 51 V
70 654 V
70 81 V
70 127 V
69 0 V
70 -283 V
70 -34 V
70 -714 V
70 -186 V
70 178 V
70 114 V
69 350 V
70 6 V
70 0 V
70 10 V
70 84 V
70 -178 V
69 22 V
70 4 V
70 -84 V
70 -33 V
70 129 V
70 235 V
69 97 V
70 0 V
70 0 V
70 114 V
70 -24 V
70 -45 V
70 -61 V
69 -31 V
70 -25 V
70 -4 V
70 -15 V
70 -64 V
70 -36 V
69 -44 V
70 -22 V
70 -37 V
70 -59 V
70 -50 V
70 -12 V
70 -6 V
69 -11 V
70 -3 V
70 -12 V
70 -1 V
70 -12 V
70 -11 V
69 -26 V
70 14 V
70 -29 V
70 -18 V
2597 2236 Crs
2667 3831 Crs
2736 3630 Crs
2806 3865 Crs
2876 3916 Crs
2946 4570 Crs
3016 4651 Crs
3086 4778 Crs
3155 4778 Crs
3225 4495 Crs
3295 4461 Crs
3365 3747 Crs
3435 3561 Crs
3505 3739 Crs
3575 3853 Crs
3644 4203 Crs
3714 4209 Crs
3784 4209 Crs
3854 4219 Crs
3924 4303 Crs
3994 4125 Crs
4063 4147 Crs
4133 4151 Crs
4203 4067 Crs
4273 4034 Crs
4343 4163 Crs
4413 4398 Crs
4482 4495 Crs
4552 4495 Crs
4622 4495 Crs
4692 4609 Crs
4762 4585 Crs
4832 4540 Crs
4902 4479 Crs
4971 4448 Crs
5041 4423 Crs
5111 4419 Crs
5181 4404 Crs
5251 4340 Crs
5321 4304 Crs
5390 4260 Crs
5460 4238 Crs
5530 4201 Crs
5600 4142 Crs
5670 4092 Crs
5740 4080 Crs
5810 4074 Crs
5879 4063 Crs
5949 4060 Crs
6019 4048 Crs
6089 4047 Crs
6159 4035 Crs
6229 4024 Crs
6298 3998 Crs
6368 4012 Crs
6438 3983 Crs
6508 3965 Crs
368 4661 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
1995 4521 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Lost Packets)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 168 4521 M
399 0 V
2597 448 M
70 0 V
69 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
69 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
69 83 V
70 0 V
70 0 V
70 55 V
70 0 V
70 56 V
69 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
69 0 V
70 0 V
70 0 V
70 221 V
70 0 V
70 55 V
70 0 V
69 0 V
70 28 V
70 0 V
70 0 V
70 0 V
70 0 V
69 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
69 0 V
70 0 V
70 0 V
70 0 V
70 0 V
70 0 V
69 0 V
70 0 V
70 0 V
70 0 V
2597 448 Star
2667 448 Star
2736 448 Star
2806 448 Star
2876 448 Star
2946 448 Star
3016 448 Star
3086 448 Star
3155 448 Star
3225 448 Star
3295 448 Star
3365 448 Star
3435 448 Star
3505 448 Star
3575 448 Star
3644 531 Star
3714 531 Star
3784 531 Star
3854 586 Star
3924 586 Star
3994 642 Star
4063 642 Star
4133 642 Star
4203 642 Star
4273 642 Star
4343 642 Star
4413 642 Star
4482 642 Star
4552 642 Star
4622 642 Star
4692 863 Star
4762 863 Star
4832 918 Star
4902 918 Star
4971 918 Star
5041 946 Star
5111 946 Star
5181 946 Star
5251 946 Star
5321 946 Star
5390 946 Star
5460 946 Star
5530 946 Star
5600 946 Star
5670 946 Star
5740 946 Star
5810 946 Star
5879 946 Star
5949 946 Star
6019 946 Star
6089 946 Star
6159 946 Star
6229 946 Star
6298 946 Star
6368 946 Star
6438 946 Star
6508 946 Star
368 4521 Star
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
2457 4871 N
0 -4423 V
4490 0 V
0 4423 V
-4490 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-BoldItalic
